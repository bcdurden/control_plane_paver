---
resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: paver-automation
  type: git
  source:
    branch: master
    uri: git@github.com:bcdurden/control_plane_paver.git
    private_key: ((creds.github-key))

- name: platform-automation
  type: pivnet
  source:
    api_token: ((pivnet-token))
    product_slug: platform-automation
    product_version: (.*)
    sort_by: semver

- name: tf-state
  type: s3
  source:
    bucket: ((s3_pivnet_products_bucket))
    access_key_id: ((creds.aws-access-key))
    secret_access_key: ((creds.aws-secret-key))
    region_name: ((s3_region_name))
    versioned_file: terraform.tfstate
    initial_content_text: '{}'
    initial_version: 'empty-start'

jobs:
  - name: build-cert-image
    public: true
    plan:
    - get: paver-automation
    - get: platform-automation-image
      params:
        unpack: false
        globs:
          - "platform-automation-image*.tgz"
      resource: platform-automation
    - get: platform-automation-tasks
      params:
        unpack: true
        globs:
          - "platform-automation-tasks*.zip"
      resource: platform-automation
    
    - task: inject-certs
      file: paver-automation/custom_tasks/inject-ca.yml
      privileged: true # this task must be privileged as it runs docker to build a new image
      input_mapping:
        image: platform-automation-image
      output_mapping:
        modified: platform-automation-image-new
      params:
        CA_PEM: ((wcf_root_cert))

  - name: pave
    public: true
    plan:
      - get: paver-automation
      - get: tf-state
      - task: get-certs
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: 
              repository: alpine
          inputs:
          - name: paver-automation
          params:
            TLS: ((tls-certificate))
          outputs:
            - name: tls-certificate
          run:
            path: sh
            args: ["paver-automation/custom_tasks/get_cert.sh"]

      - task: terraform
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: 
              repository: hashicorp/terraform
              tag: 0.11.14
          inputs:
          - name: paver-automation
          - name: tls-certificate
          params:
            AWS_ACCESS_KEY_ID: ((creds.aws-access-key))
            AWS_SECRET_ACCESS_KEY: ((creds.aws-secret-key))
            AWS_DEFAULT_REGION: us-east-2
          outputs:
          - name: terraform-output
          run:
            path: sh
            args: ["paver-automation/custom_tasks/terraform.sh"]
        ensure: &put-state
          do:
          - put: tf-state
            params:
              file: terraform-output/terraform.tfstate